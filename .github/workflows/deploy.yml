name: CI
# Workflow file for windows
on:
  push:
    branches: [ master ]
    paths:
      - 'UmaCruise/Config.h'
  pull_request:
    branches: [ master ]
    paths:
      - 'UmaCruise/Config.h'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      VCPKG_ROOT: '${{ github.workspace }}/vcpkg'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: '[17.0,18.0)'
        msbuild-architecture: x64

    - name: Get vcpkg(windows)
      run: |
        cd ${{ github.workspace }}
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        .\bootstrap-vcpkg.bat
        vcpkg integrate install

    - name: remove system vcpkg(windows)
      run: rm -rf "$VCPKG_INSTALLATION_ROOT"
      shell: bash

    - name: Build
      run: |
        cd ${{ github.workspace }}
        $Env:VCPKG_DEFAULT_TRIPLET="x64-windows"
        msbuild /m /p:Configuration=Release /p:Platform=x64
        cd ${{ github.workspace }}/Release/UmaCruise-U
        Invoke-WebRequest -Uri https://raw.githubusercontent.com/RyoLee/UmaUmaCruise-db-urarawin/master/UmaMusumeLibrary.json -OutFile ./UmaLibrary/UmaMusumeLibrary.json
        7z a UmaCruise-U.7z *
        cd ../../
        Remove-Item public -Recurse -ErrorAction Ignore
        mkdir public
        mv ./Release/UmaCruise-U/UmaCruise-U.7z ./public/
        cp UmaCruise/Config.h ./public/

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: UmaCruise-U
        retention-days: 1
        path: |
          public/UmaCruise-U.7z
          public/Config.h
 
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:      
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: UmaCruise-U
        path: public
    - name: Pack
      run: |
        mv public/Config.h ./
        echo $(cat Config.h |grep "#define"|grep "VER_BASE"|grep -Eo '".*"'|tr -d '"')$(cat Config.h |grep "#define"|grep "VER_POSTFIX"|grep -Eo '".*"'|tr -d '"') > ./public/version.txt
        VER=$(head -n 1 ./public/version.txt)
        echo "TAG_NAME=$VER" >> $GITHUB_ENV
        CONTENT="Checksum(SHA256): "$(sha256sum public//UmaCruise-U.7z | awk '{print $1}')
        echo "DEFAULT_CONTENT=$CONTENT" >> $GITHUB_ENV
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        body: ${{ env.DEFAULT_CONTENT }}
        generate_release_notes: true
        tag_name: ${{ env.TAG_NAME }}
        files: public/UmaCruise-U.7z

    - name: Deploy github pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
        keep_files: true
